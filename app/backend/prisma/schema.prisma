generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Genero {
  @@map("generos")
  idGenero Int @id @default(autoincrement())
  nomeGenero String @unique
  GeneroJogo GeneroJogo[]
}

model Editora {
  @@map("editoras")
  idEditora Int @id @default(autoincrement())
  nomeEditora String @unique
  Jogo Jogo[]
}

model Desenvolvedora {
  @@map("desenvolvedoras")
  idDesenvolvedora Int @id @default(autoincrement())
  nomeDesenvolvedora String @unique
  Jogo Jogo[]
}

model Recurso {
  @@map("recursos")
  idRecurso Int @id @default(autoincrement())
  nomeRecurso String @unique
  RecursoJogo RecursoJogo[]
}

model Tipo {
  @@map("tipo")
  idTipo Int @id @default(autoincrement())
  nomeTipo String @unique
  TipoJogo TipoJogo[]
}

model Jogo {
  @@map("jogos")
  idJogo String @id
  nomeJogo String 
  precoJogo Float
  descricao String
  dataLancamento DateTime
  dataLancamentoInicial DateTime
  desconto Float
  quantidadeVendido Int
  editora Editora?  @relation(fields: [editoraId], references: [idEditora])
  editoraId Int?
  desenvolvedora Desenvolvedora? @relation(fields: [desenvolvedoraId], references: [idDesenvolvedora])
  desenvolvedoraId Int?
  plataforma String
  imagemCaminho String 
  Pedidos Pedido[]
  RecursoJogo RecursoJogo[]
  GeneroJogo GeneroJogo[]
  TipoJogo TipoJogo[]
}

model TipoJogo {
  idJogo    String
  idTipo Int
  jogo      Jogo    @relation(fields: [idJogo], references: [idJogo])
  tipo   Tipo @relation(fields: [idTipo], references: [idTipo])

  @@id([idJogo, idTipo])
}

model RecursoJogo {
  idJogo    String
  idRecurso Int
  jogo      Jogo    @relation(fields: [idJogo], references: [idJogo])
  recurso   Recurso @relation(fields: [idRecurso], references: [idRecurso])

  @@id([idJogo, idRecurso])
}

model GeneroJogo {
  idJogo    String
  idGenero Int
  jogo      Jogo    @relation(fields: [idJogo], references: [idJogo])
  genero   Genero @relation(fields: [idGenero], references: [idGenero])

  @@id([idJogo, idGenero])
}

model Pais {
  idPais Int @id @default(autoincrement())
  nomePais String @unique
  Cliente Cliente[]
}

model Cliente {
  @@map("clientes")
  idCliente String @id
  nomeExibicao String @unique
  dataNascimento DateTime
  nome String
  email String @unique
  senha String
  pais Pais? @relation(fields: [paisId], references: [idPais])
  paisId Int?
  Pedidos Pedido[]
}

model Pagamento {
  idPagamento Int @id @default(autoincrement())
  nomePagamento String @unique
  Pedido Pedido[]
}

model Pedido {
  idPedido Int @id @default(autoincrement())
  status String
  Cliente Cliente @relation(fields: [clienteId], references: [idCliente])
  clienteId String
  Jogo Jogo @relation(fields: [jogoId], references: [idJogo])
  jogoId String 
  dataPedido DateTime
  Pagamento Pagamento? @relation(fields: [pagamentoId], references: [idPagamento])
  pagamentoId Int?
  Nota NotaFiscal[]
}

model NotaFiscal {
  idNota String @id
  Pedido Pedido @relation(fields: [pedidoId], references: [idPedido])
  pedidoId Int @unique
  ehFavorito Boolean?

}
